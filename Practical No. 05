Develop an elemantary chatbot for any suitable customer interaction application

Code

import nltk
from nltk.chat.util import Chat, reflections
import tkinter as tk
from tkinter import scrolledtext

# Define chatbot pairs (pattern-response)
pairs = [
    [
        r"hi|hello|hey",
        ["Hello! How can I help you today?", "Hi there! Need any assistance?"]
    ],
    [
        r"what is your name ?",
        ["I am a customer support chatbot.",]
    ],
    [
        r"bye|exit|quit",
        ["Goodbye! Have a great day!", "Thank you for visiting!"]
    ],
    [
        r"(.*)",
        ["I'm not sure I understand. Could you rephrase that?", "Can you please clarify your question?"]
    ]
]

# Initialize chatbot
chatbot = Chat(pairs, reflections)

# Create GUI
def send_message():
    user_input = user_entry.get()
    chat_area.insert(tk.END, "You: " + user_input + "\n")
    response = chatbot.respond(user_input)
    chat_area.insert(tk.END, "Bot: " + response + "\n")
    user_entry.delete(0, tk.END)

# Create main window
root = tk.Tk()
root.title("Simple Chatbot")
# Chat display area
chat_area = scrolledtext.ScrolledText(root, wrap=tk.WORD,width=50,height=15)
chat_area.pack(padx=10, pady=10)

# Entry field and Send button
user_entry = tk.Entry(root, width=40)
user_entry.pack(padx=10, pady=5)
send_button = tk.Button(root, text="Send", command=send_message)
send_button.pack(pady=5)
frame.pack(pady=10)

# Start GUI
root.mainloop()


Objective
  To develop a simple chatbot that can interact with customers and respond to basic queries related to a specific application (e.g., online shopping, banking, or tech support).

Description
  The chatbot is a rule-based system designed to handle basic customer queries such as greetings, product inquiries, store hours, and contact details. It uses pattern matching (like if-else or keyword checking) to determine appropriate responses. This elementary chatbot runs in a console or web interface and provides a quick-response assistant for FAQs.

Theory
  A chatbot is a software application designed to simulate conversation with human users. There are two types:
  Rule-Based Chatbots: Use predefined rules to respond to queries.
  AI-Based Chatbots: Use NLP and ML to learn from data and improve over time.
  This project focuses on a rule-based chatbot, which is easy to implement and suitable for handling straightforward tasks like:
    Greeting users
    Answering FAQs
    Providing contact/support info

Algorithm 
  Start chatbot and display a welcome message.
  Take user input as a string.
  Check for specific keywords (e.g., "hello", "price", "support", "bye") in the input.
  Match the input with a predefined set of responses using if-elif-else or a dictionary.
  Return the matching response to the user.
  Repeat until the user types "exit" or "bye".

Conclusio
  The developed chatbot demonstrates a basic level of automated customer interaction. Though limited to fixed rules and responses, it is efficient for answering repetitive queries and reducing the load on human support. This elementary chatbot lays the foundation for more advanced, AI-based systems.
